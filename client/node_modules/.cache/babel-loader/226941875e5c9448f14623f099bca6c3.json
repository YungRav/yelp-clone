{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\negri\\\\Desktop\\\\welp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\negri\\\\Desktop\\\\welp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\negri\\\\Desktop\\\\welp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\negri\\\\Desktop\\\\welp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\negri\\\\Desktop\\\\welp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"C:\\\\Users\\\\negri\\\\Desktop\\\\welp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\negri\\\\Desktop\\\\welp\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport Stores from \"./pages/Stores\";\nimport Nav from \"./components/Nav\";\nimport RestaurantCard from './components/RestaurantCard';\nimport axios from 'axios';\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    stores = [];\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var restaurantsFromDb;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('db_url');\n\n              case 2:\n                restaurantsFromDb = _context.sent;\n                // Make sure you're getting an array back here\n                console.log(restaurantsFromDb);\n\n                if (!restaurantsFromDb) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.setState({\n                  restaurants: restaurantsFromDb\n                }));\n\n              case 6:\n                console.log('No restaurants found from initial DB fetch');\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Stores, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }), this.state.restaurants.map = function (restaurant) {\n        return /*#__PURE__*/React.createElement(RestaurantCard, {\n          key: restaurant.id,\n          name: restaurant.name,\n          photo: restaurant.photo,\n          rating: restaurant.rating,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }\n        });\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component());\n\nexport default App;","map":{"version":3,"sources":["C:/Users/negri/Desktop/welp/client/src/App.js"],"names":["React","Stores","Nav","RestaurantCard","axios","App","stores","get","restaurantsFromDb","console","log","setState","restaurants","state","map","restaurant","id","name","photo","rating","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,G;;;AACJ,iBAAa;AAAA;;AAAA;;AAEXC,IAAAA,MAAM,GAAG,EAAT;AAFW;AAId;;;;;;;;;;;;uBAGmCF,KAAK,CAACG,GAAN,CAAU,QAAV,C;;;AAA1BC,gBAAAA,iB;AACN;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAZ;;qBACIA,iB;;;;;iDACK,KAAKG,QAAL,CAAc;AACnBC,kBAAAA,WAAW,EAAEJ;AADM,iBAAd,C;;;AAITC,gBAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;;;;;;;;;;;;;;;;;;6BAGO;AAAA;;AACP,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGG,KAAKG,KAAL,CAAWD,WAAX,CAAuBE,GAAvB,GAA6B,UAAAC,UAAU;AAAA,4BACtC,oBAAC,cAAD;AACE,UAAA,GAAG,EAAEA,UAAU,CAACC,EADlB;AAEE,UAAA,IAAI,EAAED,UAAU,CAACE,IAFnB;AAGE,UAAA,KAAK,EAAEF,UAAU,CAACG,KAHpB;AAIE,UAAA,MAAM,EAAEH,UAAU,CAACI,MAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADsC;AAAA,OAH1C,CADF;AAcD;;;;EAlCenB,KAAK,CAACoB,SAAN,E;;AAqClB,eAAef,GAAf","sourcesContent":["import React from 'react';\nimport Stores from \"./pages/Stores\";\nimport Nav from \"./components/Nav\";\nimport RestaurantCard from './components/RestaurantCard';\nimport axios from 'axios';\n\nclass App extends React.Component () {\n  constructor(){\n    \n    stores = []\n  \n}\n\n  async componentDidMount () {\n    const restaurantsFromDb = await axios.get('db_url');\n    // Make sure you're getting an array back here\n    console.log(restaurantsFromDb)\n    if (restaurantsFromDb) {\n      return this.setState({\n        restaurants: restaurantsFromDb\n      })\n    }\n    console.log('No restaurants found from initial DB fetch')\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <Stores />\n        {this.state.restaurants.map = restaurant => (\n          <RestaurantCard \n            key={restaurant.id}\n            name={restaurant.name} \n            photo={restaurant.photo}\n            rating={restaurant.rating}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}